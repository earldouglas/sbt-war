# tomcat

$ copy-file sbt/tomcat.sbt tomcat.sbt

## default tomcat

> reload
> tomcat:start
> await 8080
> get http://localhost:8080/test 200
> tomcat:stop
-> get http://localhost:8080/test 200
> tomcat:quickstart
> await 8080
> get http://localhost:8080/test 200
> tomcat:stop
-> get http://localhost:8080/test 200

## tomcat 7

> reload
> 'set containerLibs in Tomcat := Seq("com.github.jsimone" % "webapp-runner" % "7.0.91.0" intransitive())'
> tomcat:start
> await 8080
> get http://localhost:8080/test 200
> tomcat:stop
-> get http://localhost:8080/test 200

## tomcat 8

> reload
> 'set containerLibs in Tomcat := Seq("com.github.jsimone" % "webapp-runner" % "8.0.52.0" intransitive())'
> tomcat:start
> await 8080
> get http://localhost:8080/test 200
> tomcat:stop
-> get http://localhost:8080/test 200

## tomcat 8.5

> reload
> 'set containerLibs in Tomcat := Seq("com.heroku" % "webapp-runner" % "8.5.61.0" intransitive())'
> tomcat:start
> await 8080
> get http://localhost:8080/test 200
> tomcat:stop
-> get http://localhost:8080/test 200

# jetty

$ delete tomcat.sbt
$ copy-file sbt/jetty.sbt jetty.sbt

## default jetty

> reload

> jetty:start
> await 8080
> get http://localhost:8080/test 200
> get http://localhost:8080/h2g2 200
> get http://localhost:8080/annotation 200
> jetty:stop
-> get http://localhost:8080/test 200
-> get http://localhost:8080/h2g2 200
-> get http://localhost:8080/annotation 200

> jetty:quickstart
> await 8080
> get http://localhost:8080/test 200
> jetty:stop
-> get http://localhost:8080/test 200

## jetty 7

> reload
> 'set containerLibs in Jetty := Seq("org.mortbay.jetty" % "jetty-runner" % "7.0.0.v20091005" intransitive())'
> 'set containerMain in Jetty := "org.mortbay.jetty.runner.Runner"'
> jetty:start
> await 8080
> get http://localhost:8080/test 200
> jetty:stop
-> get http://localhost:8080/test 200

## jetty 8

> reload
> 'set containerLibs in Jetty := Seq("org.mortbay.jetty" % "jetty-runner" % "8.0.0.v20110901" intransitive())'
> 'set containerMain in Jetty := "org.mortbay.jetty.runner.Runner"'
> jetty:start
> await 8080
> get http://localhost:8080/test 200
> jetty:stop
-> get http://localhost:8080/test 200

## jetty 9

> reload
> 'set containerLibs in Jetty := Seq("org.eclipse.jetty" % "jetty-runner" % "9.4.42.v20210604" intransitive())'
> 'set containerMain in Jetty := "org.eclipse.jetty.runner.Runner"'
> jetty:start
> await 8080
> get http://localhost:8080/test 200
> jetty:stop
-> get http://localhost:8080/test 200

## jetty with jetty.xml

> reload
> 'set containerArgs := Seq("--config", s"${baseDirectory.value}/etc/jetty.xml")'
> jetty:start
> await 8080
> await 8443
> get http://localhost:8080/test 200
> jetty:stop
-> get http://localhost:8080/test 200

## fork options

> reload
> 'set containerForkOptions := com.earldouglas.xwp.Compat.forkOptionsWithRunJVMOptions(Seq("-Dh2g2=42"))'
> jetty:start
> await 8080
> get http://localhost:8080/h2g2 42
> jetty:stop
-> get http://localhost:8080/h2g2 42

## java options

> reload
> 'set javaOptions in Jetty += "-Dh2g2=42"'
> jetty:start
> await 8080
> get http://localhost:8080/h2g2 42
> jetty:stop
-> get http://localhost:8080/h2g2 42

## jetty port 9090

> reload
> 'set containerPort := 9090'
> jetty:start
> await 9090
> get http://localhost:9090/test 200
> jetty:stop
-> get http://localhost:9090/test 200

## scale

> reload
> 'set containerScale := 3'
> jetty:start
> await 8080
> await 8081
> await 8082
> get http://localhost:8080/test 200
> get http://localhost:8081/test 200
> get http://localhost:8082/test 200
-> get http://localhost:8083/test 200
> jetty:stop
-> get http://localhost:8080/test 200
-> get http://localhost:8081/test 200
-> get http://localhost:8082/test 200
-> get http://localhost:8083/test 200
